name: cd

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'


      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make application-prod.yml
        run: |
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml
        shell: bash

      - name: Build With Gradle
        run: ./gradlew build -x test


      - name: Docker build & Push
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPO }}

      - name: Deploy to Prob
        uses: appleboy/ssh-action@master
        id: deploy-prob
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          envs: GITHUB_SHA
          script: |
            touch ./docker-compose.yml
            echo "${{ secrets.DOCKER_COMPOSE }}" > ./docker-compose.yml
            docker stop ${{ secrets.DOCKER_REPO }}
            docker rm ${{ secrets.DOCKER_REPO }} 
            sudo docker pull ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPO }} 
            docker-compose up -d
            docker rmi -f $(docker images -f "dangling=true" -q)